{"version":3,"sources":["firebase/init.js","wormhole/Wormhole.js","launcher/Launcher.js","urlTitleFetcher/TitleFetcher.js","debug/WindowId.js","addURL/ManualEntryOfURL.js","books/Book.js","WindowResizer/WindowResizer.js","books/BookShelf.js","AddBookUI/Checkbox.js","AddBookUI/AddBookUI.js","sortItems/SortBooks.js","firebase/firestore/db_functions.js","books/BookAppMain.js","Authentication/SignUp.js","Authentication/PasswordReset.js","Authentication/SignIn.js","Authentication/User.js","ColorCustomizer/BackgroundColor.js","App.js","serviceWorker.js","index.js"],"names":["bw_auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","bw_db","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","cred","console","log","generateUserDocument","user","a","userRef","doc","uid","get","exists","set","email","photoURL","error","getUserDocument","userDocument","data","Wormhole","props","getBaseUrl","url","RegExp","exec","filterURLs","e","newList","target","value","urls","filter","item","lc","toLowerCase","includes","toString","setState","searchResults","state","className","type","onChange","this","placeholder","map","onClick","toggleWormhole","Component","Launcher","openURLs","preventDefault","alert","chrome","runtime","sendMessage","rq","urlsToLaunch","_cbWindow","bind","response","updateWindow","book","windowId","Launch","WormHole","WindowId","componentDidMount","linkedWindowId","linkedWindow","Book","title","winId","_cbForLaunchResponse","_cbForWormholeResponse","onMessage","addListener","handleMessage","urlsForLaunch","length","updateBook","urlsForWormhole","setLinkedWindow","launchURLs","wormholeURLs","isHovered","message","sender","sendResponse","hoverMenu","createHoverMenu","onMouseEnter","onMouseLeave","isShowingWormhole","WindowResizer","width","height","bookSize","update_width","window","innerWidth","update_height","Math","round","setNumBksPerShelf","updateDimensions","addEventListener","removeEventListener","BookShelf","createBook","_book","_index","Grid","key","xs","zeroMinWidth","deleteBook","createShelf","_bookshelf","space","numBksPerShelf","container","spacing","separateBooksIntoShelves","shelfOfBooks","numBooks","setNumBooksPerShelf","num","bool","bookList","numShelves","ceil","Array","k","i","j","n","bks","create2DArrayOfBooks","books","x","jsonObj","printBook","strBuilder","push","hasOwnProperty","join","Checkbox","label","isSelected","onCheckboxChange","name","checked","OPTIONS","AddBookUI","handleFocus","event","select","checkDuplicates","_inputTitle","newBook","_cbWindowIdResponse","new_book_name","isDuplicate","handleCheckboxChange","changeEvent","prevState","checkboxes","createCheckbox","option","createCheckboxes","reduce","options","onSubmit","ref","t","defaultValue","autoFocus","onFocus","closePopup","linkToWindow","Object","keys","checkbox","forEach","nb","Date","now","time_created","addBook","ASC","sortBy","SortBooks","sort","criteria","sortByTitle","sortByDateCreated","sortByLastAccessed","toggleOrder","order","sortCriteria","b","diff","localeCompare","compareTitle","setBooks","compareDates","isBlurred","size","caret","color","storeBook","user_id","bookDataRef","collection","snapshot","id","catch","updateBookLW","update","populatePortfolioHomepage","docs","bk","delete","deLinkBookfromWindow","currWindowId","BookAppMain","bookshelf","toggleAddBook","addingBook","bookToBeUpdated","launch","wormhole","updatedBooks","putInDataBase","filteredBooks","index","array","linkedBook","debugBkShelf","_key","filteredBook","keyName","onKeyUp","SignUp","useState","setEmail","password","setPassword","setError","createUserWithEmailAndPasswordHandler","createUserWithEmailAndPassword","userCredential","setTimeout","result","onChangeHandler","currentTarget","htmlFor","component","SignIn","PasswordReset","sendResetEmail","sendPasswordResetEmail","emailHasBeenSent","action","signInWithEmailAndPassword","signInWithEmailAndPasswordHandler","User","onAuthStateChanged","signOut","onRejected","BackgroundColor","handleChangeComplete","background","hex","document","body","style","backgroundColor","toggleColor","showColorPicker","onChangeComplete","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e068cdee.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyBkGGKw3_CKSVlsK8XUWRqmjTqcggTmtU0\",\r\n\tauthDomain: \"bookworm-backend.firebaseapp.com\",\r\n\tdatabaseURL: \"https://bookworm-backend.firebaseio.com\",\r\n\tprojectId: \"bookworm-backend\",\r\n\tstorageBucket: \"bookworm-backend.appspot.com\",\r\n\tmessagingSenderId: \"845803795351\",\r\n\tappId: \"1:845803795351:web:ffc463d678559e9118cad2\",\r\n\tmeasurementId: \"G-8FV64KKTXN\"\r\n};\r\nexport const bw_backend_app = firebase.initializeApp(config);\r\nexport const bw_auth = firebase.auth();\r\nexport const bw_db = firebase.firestore();\r\n\r\n//Google Sign in w/ Popup\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n\tbw_auth.signInWithPopup(provider)\r\n\t\t.then(cred => {\r\n\t\t\tconsole.log(\"Google login success!:\")\r\n\t\t\tconsole.log(cred)\r\n\t\t});\r\n};\r\n\r\nexport const generateUserDocument = async (user) => {//generates user document in firestore. If already exists in firestore then just returns a user object\r\n\tif (!user) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst userRef = bw_db.doc(`users/${user.uid}`);\r\n\tconst snapshot = await userRef.get();\r\n\r\n\tif (!snapshot.exists) {\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\temail: user.email,\r\n\t\t\t\tphotoURL: user.photoURL,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error creating user document\", error);\r\n\t\t}\r\n\t}\r\n\treturn getUserDocument(user.uid);\r\n};\r\n\r\nconst getUserDocument = async uid => {\r\n\tif (!uid) return null;\r\n\ttry {\r\n\t\tconst userDocument = await bw_db.doc(`users/${uid}`).get();\r\n\t\treturn {\r\n\t\t\tuid,\r\n\t\t\t...userDocument.data()\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Error fetching user\", error);\r\n\t}\r\n};","import React, {Component} from 'react'\r\nimport './wormhole.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n/*Full list of URLs in a book. When you click on the URL, it opens that link??*/\r\nclass Wormhole extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchResults:[]\r\n    };\r\n  }\r\n\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\r\n\t\t\t\t<div className = 'popup'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Wormhole</h3>\r\n\t\t\t\t\t<form className=\"input\" >\r\n\t\t\t\t\t<input type=\"text\" onChange={this.filterURLs} placeholder=\"Search...\" />\r\n                    </form>\r\n                    <ul className = 'wormhole-list'>\r\n                        {this.state.searchResults.map(item => (\r\n                          <li>\r\n                          {/*<li  key={item} style={{listStyleImage: 'url('+this.getBaseUrl(item)+'/favicon.ico)'}}>*/}\r\n                            <span>\r\n                            <a>\r\n                                {item} &nbsp;                        \r\n                            </a>\r\n                            </span>\r\n                            \r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n\r\n          \t\t\t<button onClick={()=>this.props.toggleWormhole(false)}>Back</button>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n  getBaseUrl = (url) => {\r\n    var re = new RegExp(/^.*\\//);\r\n    return re.exec(url);\r\n}\r\n\r\n\r\n\r\n\r\n\tfilterURLs = (e) =>{\r\n\t\t\t\t// Variable to hold the original version of the list\r\n    let currentList = [];\r\n\t\t// Variable to hold the filtered list before putting into state\r\n    let newList = [];\r\n\r\n\t\t// If the search bar isn't empty\r\n    if (e.target.value !== \"\") {\r\n\t\t\t// Assign the original list to currentList\r\n      currentList = this.props.urls;\r\n\r\n\t\t\t// Use .filter() to determine which items should be displayed\r\n\t\t\t// based on the search terms\r\n      newList = currentList.filter(item => {\r\n\t\t\t\t// change current item to lowercase\r\n        const lc = item.toLowerCase();\r\n\t\t\t\t// change search term to lowercase\r\n        const filter = e.target.value.toLowerCase();\r\n\t\t\t\t// check to see if the current list item includes the search term\r\n\t\t\t\t// If it does, it will be added to newList. Using lowercase eliminates\r\n\t\t\t\t// issues with capitalization in search terms and search content\r\n        return lc.includes(filter);\r\n      });\r\n    } else {\r\n\t\t\t// If the search bar is empty, set newList to original task list: do we want this effect?\r\n      newList = this.props.urls;\r\n    }\r\n    console.log(\"newList in wormhole is \"+newList.toString());\r\n\t\t// Set the filtered state based on what our rules added to newList\r\n    this.setState({\r\n      searchResults: newList\r\n    });\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nWormhole.propTypes = {\r\n    urls: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  };\r\n\r\n\r\nexport default Wormhole;","/*global chrome*/\r\n//The container that holds the books\r\nimport React, {Component} from 'react'\r\nimport './launcher.css'\r\nimport PropTypes from 'prop-types'\r\nimport TitleFetcher from '../urlTitleFetcher/TitleFetcher'\r\n//https://urlmeta.org/\r\n//import $ from 'jquery'\r\n//import WebTitleFetcher from '../experiments/webtitlefetcher.php'\r\n//import '../experiments/get_external_content.php'\r\n// import { withStyles } from '@material-ui/core/styles';\r\n//npm i react-simple-flex-grid\r\nclass Launcher extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n    \t\turls: []\r\n    \t};\r\n  \t}\r\n  \tcomponentDidMount(){\r\n  \t\tthis.setState({\r\n  \t\t\turls: this.props.urls\r\n  \t\t});\r\n\r\n  \t}\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\t\t\t\t<div className = 'launcher' onClick = {this.openURLs}>\r\n\t\t\t\t\tLauncher\r\n\t\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\topenURLs = (e) =>{\r\n\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tif(this.props.urls==null)\r\n\t\t\talert(\"No urls to open\");\r\n\t\telse{\r\n\t\t\t// alert(\"Opening \"+this.props.urls.toString())\r\n\t\t\tchrome.runtime.sendMessage({rq: \"openWindowOfTabs\", urlsToLaunch: this.props.urls},this._cbWindow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\t_cbWindow = (response) => {\r\n\t\t//alert(\"Window \"+response.windowId+\" was just created\");\r\n\t\tthis.props.updateWindow(this.props.book,response.windowId,this.props.book.Launch,this.props.book.WormHole);\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\r\n}\r\n\r\n\r\nLauncher.propTypes = {\r\n    urls: PropTypes.arrayOf(PropTypes.string),\r\n    updateWindow: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default Launcher;\r\n","\r\n//The container that holds the books\r\nimport React, {Component} from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n// import axios from 'axios'\r\nimport $ from 'jquery'\r\n//https://urlmeta.org/\r\n//import $ from 'jquery'\r\n//import WebTitleFetcher from '../experiments/webtitlefetcher.php'\r\n//import '../experiments/get_external_content.php'\r\n// import { withStyles } from '@material-ui/core/styles';\r\n//npm i react-simple-flex-grid\r\nclass TitleFetcher extends Component{\r\n\r\n\tconstructor(props){\r\n\t    super(props);\r\n\t    this.state = {\r\n\t      titles:[]\r\n\t    };\r\n\r\n  \t}\r\n  \tcomponentDidUpdate(){\r\n  \t\t// this.getTitles();\r\n\t    let titles = [];\r\n\r\n\r\n\t    function fetchHTML(externalUrl,state,cb){\r\n\t\t\t$.ajax({\r\n\t\t\t  url: externalUrl,\r\n\t\t\t  async: true,\r\n\t\t\t  success: function(data) {\r\n\t\t\t\t  const matches = data.match(/<title(.*?)<\\/title>/);\r\n\t\t\t\t  //alert(matches[0]);\r\n\t\t\t    titles = [...titles,matches[0]];\r\n\t\t\t    \tconsole.log(\"Titles inside is \"+titles.toString());\r\n\t\t\t    cb(state,matches[0]);\r\n\t\t\t  }   \r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.props.urls!=null){\r\n\t\t\tfor(let i = 0; i<this.props.urls.length; i++){\r\n\r\n\t\t\t\t\tfetchHTML(this.props.urls[i],this.state.titles,this.callback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n  \t\t\r\n  \t\tconsole.log(\"Titles outside is \"+this.state.titles.toString());\r\n\r\n  \t\t\r\n\r\n\t\t// for(var i = 0; i<this.props.urls.length; i++){\r\n\t\t// \tvar html = (await (await fetch(this.props.urls[i])).text()); // html as text\r\n\t\t// \tvar doc = new DOMParser().parseFromString(html, 'text/html');\r\n\t\t// \talert(\"Remote doc title is \"+doc.title);\r\n\t\t// \tif(doc.title!=undefined)\r\n\t\t// \tthis.setState(\r\n\t\t//       {\r\n\t\t//         titles: [...this.state.titles, doc.title]\r\n\t\t//       }\r\n\t\t//     );\r\n\t\t//     console.log(\"State in getHTML is \"+this.state.titles.toString());\r\n\t\t\t\r\n\r\n\t\t// }\r\n  \t\t\r\n  \t}\r\n\r\n  \tcallback = (state,t) => {\r\n\t\t\tconsole.log(\"Param in callback is \"+t.toString());\r\n\t\t\t//state.push(t);\r\n\t\t\tfunction stripHTMLTags(str) {\r\n\t\t\t\t// var s1 = str.replace('<title>', '');\r\n\r\n\t\t\t\t// var s2 = s1.replace('</title>', '');\r\n\t\t\t\tconst stripedHtml = $(\"<div>\").html(str).text();\r\n\t\t\t\treturn stripedHtml;\r\n\t\t\t}\r\n\t\t\tvar title = stripHTMLTags(t);\r\n\t\t\t\r\n\t\t\tthis.setState({titles: [...this.state.titles,title]})\r\n\t\t\tconsole.log(\"In callback state is \"+this.state.titles.toString());\r\n\r\n\t\t}\r\n\trender(){\r\n\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul>\r\n        \t\t\t{ this.state.titles.map(title => <li>{title}</li>)}\r\n      \t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// getTitles = () =>{\r\n\t// \tconsole.log(\"titlefetcher has \"+this.props.urls.length+\" urls\");\r\n\t// \tfor(var i = 0; i<this.props.urls.length; i++){\r\n\t\t\t\r\n\t// \t\tthis.getHTML(this.props.urls[i])\r\n\r\n\t// \t}\r\n\r\n\t// }\r\n\r\n\t// getHTML =async  (url) =>{\r\n\t// \tvar html = (await (await fetch(url)).text()); // html as text\r\n\t// \tvar doc = new DOMParser().parseFromString(html, 'text/html');\r\n\t// \talert(\"Remote doc title is \"+doc.title);\r\n\t// \tthis.setState(\r\n\t//       {\r\n\t//         titles: [...this.state.titles, doc.title]\r\n\t//       }\r\n\t//     );\r\n\t//     console.log(\"State in getHTML is \"+this.state.titles.toString());\r\n\t\t\r\n\t// }\r\n\r\n\r\n\t// getTitle = (url) =>{\r\n\t// \tvar title = \"\";\r\n\t// \tvar xhr = new XMLHttpRequest();\r\n\t// \txhr.open(\"GET\", url, true);\r\n\t// \txhr.onreadystatechange = function() { \r\n\t// \t  if (xhr.readyState == 4) {\r\n\t// \t    var fetchTitle = (/<title>(.*?)<\\/title>/m).exec(xhr.responseText);\r\n\t// \t    if(fetchTitle!=null){ //if the title could be fetched per cors policy\r\n\t// \t\t    title = fetchTitle[1];\r\n\t// \t\t    alert(title);\r\n\t// \t\t    this.setState(\r\n\t// \t\t      {\r\n\t// \t\t        titles: [...this.state.titles, title]\r\n\t// \t\t      }\r\n\t// \t\t    );\r\n\t// \t\t}\r\n\t// \t  }\r\n\t// \t}\r\n\t// \txhr.send();\r\n\t// }\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n}\r\n\r\n\r\nTitleFetcher.propTypes = {\r\n    urls: PropTypes.arrayOf(PropTypes.string).isRequired\r\n  };\r\n\r\nexport default TitleFetcher;\r\n","\r\n//The container that holds the books\r\nimport React, {Component} from 'react'\r\n\r\n// import { withStyles } from '@material-ui/core/styles';\r\n//npm i react-simple-flex-grid\r\nimport PropTypes from 'prop-types'\r\n\r\nclass WindowId extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      linkedWindow: -999\r\n      // launchURLs: ['https://www.github.com/'],\r\n      // wormholeURLs:['https://www.github.com/','https://www.google.com/search?sxsrf=ALeKk03xO56CXGouNmYNfOx9L3LEpIKKrQ%3A1585511879738&ei=x_2AXofVLMusytMPvui78AI&q=when+will+coronavirus+end&oq=when+will+&gs_lcp=CgZwc3ktYWIQAxgAMgQIIxAnMgQIIxAnMgUIABCDATIFCAAQgwEyAggAMgIIADICCAAyAggAMgIIADICCAA6BAgAEEc6BggAEBYQHjoFCAAQzQI6BwgAEBQQhwI6BwgjEOoCECc6BQgAEJECOgQIABBDUOcpWM1kYPBsaARwAngDgAGJAogBrCqSAQczMi4xOC4zmAEAoAEBqgEHZ3dzLXdperABCg&sclient=psy-ab']\r\n    };\r\n  }\r\n  componentDidMount=() =>{\r\n  \t\tif(this.props.linkedWindowId==null)\r\n  \t\t\talert('linked window is null')\r\n\t\tthis.setState({\r\n\t\t\tlinkedWindow: this.props.linkedWindowId\r\n\t\t});\r\n\t}\r\n\t  \r\n\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\tlinkedWindow: {this.props.linkedWindowId} \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\t\r\nWindowId.propTypes = {\r\n\t\r\n\tlinkedWindowId: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport default WindowId;","\r\n//The container that holds the books\r\nimport React, {Component} from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport './url-entry.css'\r\n// import { withStyles } from '@material-ui/core/styles';\r\n//npm i react-simple-flex-grid\r\n import '../books/bookStyles.css'\r\nclass ManualEntryOfURL extends Component{\r\nhandleFocus = (event) => event.target.select();\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n      urls: ['https://www.github.com/']\r\n    };\r\n  }\r\n\r\n//if user is hovering over album, show launch\r\n//else show title\r\n\r\n  render() {  \r\n    return <div className = \"url-entry-box-container\">\r\n                <form onSubmit={this.manuallyAddURL}>\r\n                  <input ref={(t) => this._inputURL = t}\r\n                    defaultValue=\"https://www.google.com\">\r\n                  </input>\r\n                  <button type=\"submit\">add</button>\r\n                </form>\r\n            </div>\r\n  } \r\n\r\n\r\n  \r\n\r\n  manuallyAddURL = (e) =>{\r\n\r\n      e.preventDefault();\r\n      //TODO in future put date label on URLs\r\n      // var _newURL = {\r\n      //   key: Date.now(),\r\n      //   url: this._inputURL.value\r\n      // };\r\n      \r\n   \r\n     this.props.setLaunchURLs(this._inputURL.value);\r\n     this.props.setWormholeURLs(this._inputURL.value);\r\n     \r\n      this._inputURL.value = \"\";\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\nManualEntryOfURL.propTypes = {\r\n    setLaunchURLs: PropTypes.func.isRequired,\r\n\r\n    setWormholeURLs: PropTypes.func.isRequired\r\n  };\r\nexport default ManualEntryOfURL;\r\n\r\n","/*global chrome*/\r\n//The container that holds the books\r\nimport React, {Component} from 'react'\r\n\r\n// import { withStyles } from '@material-ui/core/styles';\r\n//npm i react-simple-flex-grid\r\nimport PropTypes from 'prop-types'\r\nimport './bookStyles.css'\r\nimport '../wormhole/wormhole.css'\r\nimport Wormhole from '../wormhole/Wormhole'\r\nimport Launcher from '../launcher/Launcher'\r\nimport ManualEntryOfURL from '../addURL/ManualEntryOfURL'\r\nimport WindowId from '../debug/WindowId'\r\n\r\nclass Book extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    \tlinkedWindowId:-100,\r\n    \tbook: null,\r\n      title:'',\r\n      isHovered: false,\r\n      // launchURLs: ['https://www.github.com/'],\r\n      // wormholeURLs:['https://www.github.com/','https://www.google.com/search?sxsrf=ALeKk03xO56CXGouNmYNfOx9L3LEpIKKrQ%3A1585511879738&ei=x_2AXofVLMusytMPvui78AI&q=when+will+coronavirus+end&oq=when+will+&gs_lcp=CgZwc3ktYWIQAxgAMgQIIxAnMgQIIxAnMgUIABCDATIFCAAQgwEyAggAMgIIADICCAAyAggAMgIIADICCAA6BAgAEEc6BggAEBYQHjoFCAAQzQI6BwgAEBQQhwI6BwgjEOoCECc6BQgAEJECOgQIABBDUOcpWM1kYPBsaARwAngDgAGJAogBrCqSAQczMi4xOC4zmAEAoAEBqgEHZ3dzLXdperABCg&sclient=psy-ab']\r\n    };\r\n     this.handleMessage.bind(this);\r\n  }\r\n  componentDidMount=() =>{\r\n\t\tthis.setState({\r\n\t\t\tlinkedWindowId: this.props.book.linkedWindowId,\r\n\t\t\tbook: this.props.book,\r\n\t\t\ttitle: this.props.book.title\r\n\t\t});\r\n\r\n\t\tif(this.props.book.linkedWindowId>=0){\r\n\t\t\tchrome.runtime.sendMessage({rq: \"urlsForLaunch\", winId: this.props.book.linkedWindowId}, this._cbForLaunchResponse);\r\n\t\t\tchrome.runtime.sendMessage({rq: \"urlsForWormhole\", winId: this.props.book.linkedWindowId}, this._cbForWormholeResponse);\r\n\t\t}\r\n\t\t\r\n\t\tchrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\r\n\t}\r\n\thandleMessage(message, sender, sendResponse){\r\n\t\tif(message.winId==this.props.book.linkedWindowId){\r\n\t\t\tthis._cbForLaunchResponse(message);\r\n\t\t\tthis._cbForWormholeResponse(message);\r\n\t\t}\r\n\t}\r\n\t//for initial book setups\r\n\t_cbForLaunchResponse = (response) => {\r\n\t\tif(response.urlsForLaunch&&response.urlsForLaunch.length){//if launch urls are not empty\r\n\t\t\tthis.props.updateBook(this.props.book,this.props.book.linkedWindowId,response.urlsForLaunch,this.props.book.WormHole);\r\n\t\t}\r\n\t}\r\n\r\n\t_cbForWormholeResponse = (response) => {\r\n\t\tif(response.urlsForWormhole&&response.urlsForWormhole.length){//if launch urls are not empty\r\n\t\t\tthis.props.updateBook(this.props.book,this.props.book.linkedWindowId,this.props.book.Launch,response.urlsForWormhole);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\t  createHoverMenu() {\r\n\t    return <div className ='hover-menu'>\r\n\t\t\t\t<Launcher book = {this.props.book} updateWindow = {this.props.updateBook} urls = {this.props.book.Launch}/>\r\n\t\t\t\t<div className = 'wormhole' \r\n\t\t\t\t\t\tonClick = {() => this.props.toggleWormhole(true)}>Wormhole\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t  }\r\n\t  \r\n\r\n\r\n\trender(){\r\n\r\n\t\tconst hoverMenu = this.createHoverMenu();\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<div> <WindowId linkedWindowId = {this.props.book.linkedWindowId} /> </div>\r\n\t\t\t<div className = 'book'\r\n\t\t\t\tonMouseEnter = {()=>this.setState({isHovered:true})}\r\n\t\t\t\tonMouseLeave = {()=>this.setState({isHovered:false})}>\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tthis.state.isHovered?\r\n\t\t\t\t\t\thoverMenu\r\n\t\t\t\t\t:\r\n\r\n\t\t\t\t\t<div className = 'bk_title' ><h1>{this.state.title}</h1></div>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.isShowingWormhole? \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Wormhole urls = {this.props.book.WormHole} toggleWormhole = {this.props.toggleWormhole}/>\r\n\t\t\t\t\t</div> : <div/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t{/*<ManualEntryOfURL setWormholeURLs = {this.setWormholeURLs} setLaunchURLs = {this.setLaunchURLs}/>*/}\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tsetLinkedWindow = (windowId) =>{\r\n\r\n\r\n\t\tthis.setState({\r\n\t\t\tlinkedWindowId: windowId\r\n\t\t}, () =>{\r\n\t\tthis.props.updateBook(this.props.book,windowId,this.state.launchURLs,this.state.wormholeURLs)})\r\n\t}\r\n\t// setLaunchURLs = (newURL) => {\r\n\t// \tthis.setState(\r\n\t//       {\r\n\t//         launchURLs: [...this.state.launchURLs,newURL],\r\n\t//         wormholeURLs:[...this.state.wormholeURLs,newURL]\r\n\t//       }, ()=>(this.props.updateBook(this.props.book,this.state.linkedWindowId,this.state.launchURLs,this.state.wormholeURLs))\r\n\t//     );\r\n\r\n\t// }\r\n\r\n\t// setWormholeURLs = (newURL) =>{\r\n\t// \tthis.setState(\r\n\t//       {\r\n\t//         wormholeURLs: [...this.state.wormholeURLs,newURL],\r\n\t//       },()=>(this.props.updateBook(this.props.book,this.state.linkedWindowId,this.state.launchURLs,this.state.wormholeURLs))\r\n\t//     );\r\n\t// }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nBook.propTypes = {\r\n\tbook: PropTypes.shape({\r\n\t\tkey: PropTypes.number.isRequired,\r\n\t\ttitle: PropTypes.string.isRequired,\r\n\t\tlinkedWindowId: PropTypes.number.isRequired,\r\n\t\tLaunch: PropTypes.array.isRequired,\r\n\t\tWormHole: PropTypes.object.isRequired\r\n\t}),\r\n\t\ttoggleWormhole: PropTypes.func.isRequired,\r\n\t\tisShowingWormhole: PropTypes.bool.isRequired,\r\n\t\tupdateBook: PropTypes.func.isRequired\r\n\t};\r\n\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n/*determines number of books to display per row*/\r\nclass WindowResizer extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      width:  800,\r\n      height: 182,\r\n      bookSize: 320\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate & Update state of new dimensions\r\n   */\r\n  updateDimensions() {\r\n    \r\n      let update_width  = window.innerWidth-100;\r\n      let update_height = Math.round(update_width/4.4);\r\n      this.setState({ width: update_width, height: update_height });\r\n      this.props.setNumBksPerShelf(Math.round(update_width/this.state.bookSize));\r\n      \r\n  }\r\n\r\n  /**\r\n   * Add event listener\r\n   */\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Remove event listener\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div> \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nWindowResizer.propTypes = {\r\n    \r\n  setNumBksPerShelf: PropTypes.func.isRequired\r\n  };\r\nexport default WindowResizer;","import React, {Component} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Book from './Book'\r\nimport PropTypes from 'prop-types'\r\nimport './bookStyles.css'\r\nimport WindowResizer from '../WindowResizer/WindowResizer'\r\nclass BookShelf extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisShowingWormhole:false,\r\n\t\t\t// books:[],\r\n\t\t\tnumBksPerShelf:4\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tcreate2DArrayOfBooks(bookList){\r\n\tconst numShelves = Math.ceil(bookList.length/this.state.numBksPerShelf);\r\n\r\n\t  const shelfOfBooks = new Array(numShelves);\r\n\t  for (let k = 0; k < shelfOfBooks.length; k++) {\r\n\t    shelfOfBooks[k] = new Array(this.state.numBksPerShelf);\r\n\t}\r\n\r\n\t// Loop to initialize 2D array elements (books).\r\n\t  let debugString = \"\";\r\n\t  for (let i = 0; i < numShelves; i++) {\r\n\t    for (let j = 0; j < this.state.numBksPerShelf; j++) {\r\n\t        const n = i * this.state.numBksPerShelf + j;\r\n\t        if(n<bookList.length){\r\n\t          shelfOfBooks[i][j] = bookList[n];\r\n\t        }\r\n\t        else{\r\n\t          shelfOfBooks[i][j] = null;\r\n\t        }\r\n\t        debugString+=(\"Shelf (\"+i+\",\"+j+\") is \"+shelfOfBooks[i][j]+\"\\n\");\r\n\t    }\r\n\t}\r\n\t// console.log(\"DEBUG SHELF PARSE of bookList len: \"+bookList.length+\": \"+debugString);\r\n\t// this.printShelf(shelfOfBooks);\r\n\treturn shelfOfBooks;\r\n\r\n\t}\r\n\r\n\tcreateBook =(_book,_index) => {\r\n\r\n\t// this.printBook(_index,_book);\r\n\r\n\t\treturn <Grid key = {_index} item xs zeroMinWidth>\r\n\t\t\t{_book===null?null:\r\n\t\t\t\t<div key={_book.key}>\r\n\t\t\t\t\t{/*<BookNavbar book ={_book} deleteBook = {this.deleteBook} />*/}\r\n\t\t\t\t\t<button onClick={() => this.deleteBook(_book)}>...</button>\r\n\t\t\t\t\t<Book book ={_book} updateBook = {this.props.updateBook} toggleWormhole = {this.toggleWormhole}\r\n\t\t\t\t\t  isShowingWormhole = {this.state.isShowingWormhole} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t</Grid>\r\n\t}\r\n\r\n\tcreateShelf =(_bookshelf,_index) => {\r\n\r\n\t\tconst space = this.state.numBksPerShelf;\r\n\t\treturn (\r\n\t\t\t<Grid key = {_index} container spacing={space}>\r\n\t\t\t\t{_bookshelf.map(this.createBook)}\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n\r\n\tseparateBooksIntoShelves = (shelfOfBooks,numBooks) =>{\r\n\t  return <div>{shelfOfBooks.map(this.createShelf)}</div>\r\n\t}\r\n\r\n\tdeleteBook = (_book) =>{\r\n\t\tconsole.log(_book.title+\" Key is \"+_book.key);\r\n\t\tthis.props.deleteBook(_book)\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tconst bookList = this.props.bks;//array of all books\r\n\r\n\t\tconst shelfOfBooks = this.create2DArrayOfBooks(bookList);\r\n\t\t// this.printBkList(bookList);\r\n\t\t// var books = bookList.map(this.createBook);\r\n\t\tconst books = this.separateBooksIntoShelves(shelfOfBooks, bookList.length);\r\n\t\t// var books = this.divideBooksIntoRows(bookList,bookList.length);\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<WindowResizer setNumBksPerShelf = {this.setNumBooksPerShelf} />\r\n\t\t    <div className='book-shelf'>\r\n\t\t        {books}\r\n\t\t    </div>\r\n\t\t    </div>\r\n\r\n\t\t);\r\n\t}\r\n\r\n\tsetNumBooksPerShelf = (num) =>{\r\n\t\tthis.setState({\r\n\t\t\tnumBksPerShelf:num\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t//print methods for debug\r\n\tprintBkList(bookList){\r\n\t\tconsole.log(\"Printing Book List\");\r\n\t\tfor(let x = 0; x<bookList.length; x++){\r\n\t\t    const jsonObj = bookList[x];\r\n\t\t    this.printBook(x,jsonObj);\r\n\t\t}\r\n\t}\r\n\tprintBook(x,jsonObj){\r\n\t\tconst strBuilder = [];\r\n\t\tstrBuilder.push(\"Item \"+x+\": \");\r\n\t\tfor(const key in jsonObj){\r\n\t\t    if (jsonObj.hasOwnProperty(key)) {\r\n\t\t         strBuilder.push(\"\"+jsonObj[key]+\",\");\r\n\t\t    }\r\n\t\t    else{strBuilder.push(\"Null\")}\r\n\t\t}\r\n\t\tconsole.log(strBuilder.join(\"\"));\r\n\t}\r\n\r\n\ttoggleWormhole = (bool) =>{\r\n\t\t//console.log(\"Adding book\");\r\n\t\tthis.setState({isShowingWormhole:bool});\r\n\t}\r\n\r\n}\r\n\r\nBookShelf.propTypes = {\r\n    bks: PropTypes.arrayOf(PropTypes.shape({\r\n        key: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n\t\tlinkedWindowId: PropTypes.number,\r\n\t    Launch: PropTypes.array.isRequired,\r\n\t    WormHole: PropTypes.object.isRequired\r\n    })),\r\n\tdeleteBook: PropTypes.func.isRequired,\r\n\r\n\tupdateBook: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default (BookShelf);","\r\nimport React from \"react\";\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\r\n  <div className=\"form-check\">\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={label}\r\n        checked={isSelected}\r\n        onChange={onCheckboxChange}\r\n        className=\"form-check-input\"\r\n      />\r\n      {label}\r\n    </label>\r\n  </div>\r\n);\r\n\r\nexport default Checkbox;","/*global chrome*/\r\n//The container that holds the books\r\nimport React, {Component} from 'react'\r\nimport '../books/bookStyles.css'\r\nimport './pop-up.css'\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nconst OPTIONS = [\"Link book to window\"];\r\n\r\nclass AddBookUI extends Component {\r\n\r\n    handleFocus = (event) => event.target.select();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n\t        newBook: null,\r\n            checkboxes: OPTIONS.reduce(\r\n              (options, option) => ({\r\n                ...options,\r\n                [option]: false\r\n              }),\r\n              {}\r\n            )\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='popup'>\r\n\r\n                    <div className='book'>\r\n                        <h2>Name of the book: </h2>\r\n                        <div>\r\n\r\n                            <form onSubmit={this.createBook}>\r\n\r\n                                <input ref={(t) => this._inputTitle = t}\r\n                                       placeholder=\"Enter Title Here\" defaultValue=\"Title\" autoFocus\r\n                                       onFocus={this.handleFocus}>\r\n                                </input>\r\n                                \r\n                                {this.createCheckboxes()}\r\n\r\n                                <span>\r\n\t\t\t\t\t\t\t\t\t<button type=\"submit\">Add</button>\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n                            </form>\r\n\r\n                            <button onClick={this.props.closePopup}>Cancel</button>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createBook = (e) => {//receiving the value in the form onSubmit.\r\n\t    //check to see if the newBook added with title this._inputTitle.value already exists\r\n\t    let isDup = this.checkDuplicates(this._inputTitle.value);\r\n\t    if (!isDup) {\r\n\t\t    chrome.runtime.sendMessage({rq: \"getCurrWindowId\"}, this._cbWindowIdResponse.bind(this));\r\n\t    }\r\n\t    else{\r\n\t\t    this._inputTitle.value = \"\";\r\n\t\t    this.setState({newBook: null})\r\n\t    }\r\n\r\n\t    e.preventDefault();\r\n    }\r\n\r\n    checkDuplicates = (new_book_name) => {//compare book titles making sure there are no duplicates\r\n        let isDuplicate = false;\r\n        if (this.props.bks.length !== 0) {//no books yet so can't have duplicates\r\n            for (const books of this.props.bks) {\r\n                // console.log(books);\r\n                if (books.title === new_book_name) {\r\n                    alert(new_book_name + \" already exists!\");\r\n                    isDuplicate = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isDuplicate;\r\n    }\r\n\r\n\t_cbWindowIdResponse(response) {\r\n        let windowId = response.windowId;\r\n        if(windowId==null)\r\n            alert('window id is null');\r\n\r\n        var linkToWindow = -1;\r\n        Object.keys(this.state.checkboxes)\r\n          .filter(checkbox => this.state.checkboxes[checkbox])\r\n          .forEach(checkbox => {\r\n            console.log(checkbox, \"is selected.\");\r\n            if(checkbox =='Link book to window'){\r\n                linkToWindow = windowId;\r\n                // alert('Checkbox '+checkbox +' is selected. This book will be linked to current window');\r\n            }\r\n          });\r\n          // alert('Book is linked to window'+linkToWindow);\r\n\t\tconst nb = {//what a book should contain\r\n\t\t\tkey: Date.now(),\r\n\t\t\ttitle: this._inputTitle.value,\r\n\t\t\ttime_created: Date.now(),\r\n\t\t\tlinkedWindowId: linkToWindow,\r\n\t\t\tLaunch: this.props.urlsForLaunch,\r\n\t\t\tWormHole: this.props.urlsForWormhole\r\n\t\t};\r\n\r\n\t\tconsole.log(\"Linking current window \" + windowId.toString() + \" to book: \"+nb.title +\" so nb linked window is \"+nb.linkedWindowId);\r\n        this.props.addBook(nb);//calls this.props.addBook function so that we can add the newly created book and go back to portfolio homepage clearing the addBookUI\r\n\t\tthis._inputTitle.value = \"\";\r\n        this.setState({newBook: null})\r\n\t}\r\n\r\n    /*link window questionaire*/\r\n\r\n      handleCheckboxChange = changeEvent => {\r\n        const { name } = changeEvent.target;\r\n\r\n        this.setState(prevState => ({\r\n          checkboxes: {\r\n            ...prevState.checkboxes,\r\n            [name]: !prevState.checkboxes[name]\r\n          }\r\n        }));\r\n      };\r\n\r\n    createCheckbox = option => (\r\n        <Checkbox\r\n          label={option}\r\n          isSelected={this.state.checkboxes[option]}\r\n          onCheckboxChange={this.handleCheckboxChange}\r\n          key={option}\r\n        />\r\n      );\r\n\r\n      createCheckboxes = () => OPTIONS.map(this.createCheckbox);\r\n\r\n\r\n}\r\n\r\nexport default AddBookUI;","//The sort button\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'; // ES6\r\nimport {MDBBtn,MDBBtnGroup, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport './sort-btns.css'\r\n\r\nconst ASC = 'ascending';\r\nconst DSC = 'descending';\r\n\r\nconst sortBy = {\r\n\tNONE: 'None',\r\n    TITLE: 'Title',\r\n    DATE_CREATED: 'Date Created',\r\n    LAST_ACCESSED: 'Last Accessed'\r\n}\r\n\r\n\r\nclass SortBooks extends Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n    \tsortCriteria: sortBy.NONE,\r\n    \torder: ASC,\r\n    \tbooks: []\r\n    };\r\n  }\r\n\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\t\t\t<div className = {this.props.isBlurred? 'blur-bg':'clear-bg'}>\r\n\t\t\t\t<MDBBtnGroup className=\"sort-btn-container\">\r\n\t\t\t\tSort By:\r\n\r\n\t\t\t\t      <MDBDropdown size = \"sm\">\r\n\r\n\t\t\t\t        <MDBDropdownToggle caret color = \"info\">\r\n\t\t\t\t          {this.state.sortCriteria}\r\n\t\t\t\t        </MDBDropdownToggle>\r\n\r\n\t\t\t\t        <MDBDropdownMenu>\r\n\t\t\t\t          <MDBDropdownItem onClick={() =>{this.sort(sortBy.TITLE)}}>{sortBy.TITLE}</MDBDropdownItem>\r\n\r\n\t\t\t\t           <MDBDropdownItem onClick={() =>{this.sort(sortBy.DATE_CREATED)}}>\r\n\t\t\t\t           {sortBy.DATE_CREATED}\r\n\t\t\t\t           </MDBDropdownItem>\r\n\t\t\t\t       \r\n\r\n\t\t\t\t           <MDBDropdownItem onClick={() =>{this.sort(sortBy.LAST_ACCESSED)}}>\r\n\t\t\t\t           {sortBy.LAST_ACCESSED}\r\n\t\t\t\t           </MDBDropdownItem>\r\n\r\n\t\t\t\t        </MDBDropdownMenu>\r\n\t\t\t\t        \r\n\t\t\t\t      </MDBDropdown>\r\n\t\t\t\t      <MDBBtn size=\"sm\" onClick = {this.toggleOrder}>\r\n\t\t\t\t      \t\t{this.state.order===ASC? <div>&#9650;</div> : <div>&#9660;</div>}\r\n\t\t\t\t      </MDBBtn>\r\n\t\t\t\t  </MDBBtnGroup>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tsort = (criteria=sortBy.TITLE) =>{\r\n\t\tswitch(criteria){\r\n\t\t\tcase sortBy.TITLE:\r\n\t\t\t\tthis.sortByTitle();\r\n\t\t\tbreak;\r\n\t\t    case sortBy.DATE_CREATED:\r\n\t\t\t\tthis.sortByDateCreated();\r\n\t\t    break;\r\n\t\t    case sortBy.LAST_ACCESSED:\r\n\t\t\t\tthis.sortByLastAccessed();\r\n\t\t    break;\r\n\t\t    default:\r\n\t\t    break;\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleOrder = () =>{\r\n\t\tthis.state.order===ASC? this.setState({order:DSC}) : this.setState({order:ASC})\r\n\t\tthis.sort();\r\n\t}\r\n\t\r\n\tsortByTitle = () =>{\r\n\t\tthis.setState({sortCriteria: sortBy.TITLE})\r\n\t\tvar books = [...this.props.books];\r\n\t\t//custom compare function for title\r\n\t\tfunction compareTitle(a, b, order = ASC) {\r\n\t\t    const diff = a.title.toLowerCase().localeCompare(b.title.toLowerCase());\r\n\r\n\t\tconsole.log(\"Diff is \"+diff+\", and order is \"+order);\r\n\t\t    if (order === ASC) {\r\n\t\t        return diff;\r\n\t\t    }\r\n\r\n\t\t    return -1 * diff;\r\n\t\t}\r\n\r\n\t\tbooks.sort((a, b) => compareTitle(a, b, this.state.order))\r\n\r\n\t\tthis.props.setBooks(books)\r\n\t}\r\n\r\n\tsortByDateCreated = () =>{\r\n\t\tthis.setState({sortCriteria: sortBy.DATE_CREATED})\r\n\t\tvar books = [...this.props.books];\r\n\t\tconsole.log(\"Sort by date created has not been implemented\")\r\n\r\n\t\tfunction compareDates(a, b, order = ASC) {\r\n\t\t    const diff = a.key - b.key;\r\n\r\n\t\t    if (order === ASC) {\r\n\t\t        return diff;\r\n\t\t    }\r\n\r\n\t\t    return -1 * diff;\r\n\t\t}\r\n\r\n\t\tbooks.sort((a, b) => compareDates(a, b, this.state.order));\r\n\r\n\t\tthis.props.setBooks(books);\r\n\r\n\t}\r\n\r\n\tsortByLastAccessed = () =>{\r\n\t\tthis.setState({sortCriteria: sortBy.LAST_ACCESSED})\r\n\t\tconsole.log(\"Sort by last accessed has not been implemented\")\r\n\r\n\t\talert(\"Sort by last accessed has not been implemented\")\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\nSortBooks.propTypes = {\r\n    books: PropTypes.arrayOf(PropTypes.shape({\r\n        key: PropTypes.number,\r\n        title: PropTypes.string.isRequired\r\n      })),\r\n    setBooks: PropTypes.func.isRequired\r\n\r\n  };\r\n\r\nexport default SortBooks;","import {bw_db} from \"../init\";\r\n\r\nexport const storeBook = async (book, user_id) => {//takes in a book object and a users special uid to create a book under the uid.\r\n\tconst bookDataRef = bw_db.collection(`users/${user_id}/bookData`).doc(book.key.toString())\r\n\r\n\tawait bookDataRef.get()\r\n\t\t.then(async snapshot => {//needs to check if the snapshot exists or not\r\n\t\t\tif (snapshot.exists) {\r\n\t\t\t\tconsole.log(\"book already exists\")\r\n\t\t\t\tconsole.log(snapshot.id)//gets the docs id\r\n\t\t\t\tconsole.log(snapshot.data())//gets the docs data\r\n\t\t\t} else {//doc.data() here will be undefined in this case\r\n\t\t\t\tconsole.log(\"initializing book \" + book.title)\r\n\t\t\t\tawait bookDataRef.set({\r\n\t\t\t\t\ttitle: book.title,\r\n\t\t\t\t\t// time_created: book.time_created,\r\n\t\t\t\t\tlinkedWindowId: book.linkedWindowId,\r\n\t\t\t\t\tLaunch: book.Launch,\r\n\t\t\t\t\tWormHole: book.WormHole\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}).catch(e => {\r\n\t\t\tconsole.log(\"Error getting from storing book: \" + e)\r\n\t\t\treturn false\r\n\t\t})\r\n}\r\n\r\nexport const updateBookLW = async (book, user_id) => {\r\n\tconst bookDataRef = bw_db.collection(`users/${user_id}/bookData`).doc(book.key.toString())\r\n\t// alert(\"updating bk \"+book.title+\" in database\");\r\n\tawait bookDataRef.get().then(async snapshot => {\r\n\t\tif(snapshot.exists){\r\n\t\t\tawait bookDataRef.update({\r\n\t\t\t\t\tlinkedWindowId: book.linkedWindowId,\r\n\t\t\t\t\tLaunch: book.Launch,\r\n\t\t\t\t\tWormHole: book.WormHole\r\n\t\t\t})\r\n\t\t\tconsole.log(\"database updated book\"+book.title+\" linked window to be \"+bookDataRef.linkedWindowId);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.log(\"book doesn't exist in database...\")\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}).catch(e => console.log(e));\r\n\treturn true;\r\n}\r\n\r\n\r\nexport const populatePortfolioHomepage = async (user_id) => {//returns an array of book objects for user from firestore.\r\n\tconsole.log(\"updating portfolio homepage with books from \" + user_id)\r\n\tlet books = []\r\n\tconst bookDataRef = bw_db.collection(`users/${user_id}/bookData`)\r\n\tawait bookDataRef.get()\r\n\t\t.then(async (snapshot) => {\r\n\t\t\tconsole.log(\"iterating through user: \" + user_id + \" bookData\")\r\n\t\t\tawait snapshot.docs.forEach(book => {\r\n\t\t\t\tlet x = book.data()\r\n\t\t\t\tx.key = book.id\r\n\t\t\t\tbooks.push(x)\r\n\t\t\t})\r\n\t\t\treturn books\r\n\t\t}, e => {\r\n\t\t\treturn e\r\n\t\t})\r\n\treturn books\r\n}\r\n\r\nexport const deleteBook = async (bk, user_id) => {\r\n\tconsole.log(\"deleting book \" + bk.title + \" for user: \" + user_id)\r\n\tconst bookDataRef = bw_db.doc(`users/${user_id}/bookData/${bk.key.toString()}`)\r\n\tawait bookDataRef.get().then(snapshot => {\r\n\t\tbookDataRef.delete().then(function () {\r\n\t\t}).catch(function (error) {\r\n\t\t\tconsole.error(\"Error removing document: \", error);\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport const deLinkBookfromWindow = async (bk, currWindowId, user_id) => {//update the book with the linked window id\r\n\tif (bk.linkedWindowId === currWindowId) {\r\n\t\tlet bookDataRef = bw_db.doc(`users/${user_id}/bookData/${bk.key.toString()}`);\r\n\t\tbookDataRef.get().then(async snapshot => {\r\n\t\t\tif(snapshot.exists){\r\n\t\t\t\tawait bookDataRef.update({\r\n\t\t\t\t\t// Launch: null,\r\n\t\t\t\t\t// WormHole: null,\r\n\t\t\t\t\tlinkedWindowId: -132\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\tconsole.log(\"Delinked successful for \" + bk.title + \" and window \" + currWindowId);\r\n\t\t\t\t}).catch(error => {\r\n\t\t\t\t\tconsole.error(\"error updating book with delinking: \", error);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n}\r\n\r\n","/*global chrome*/\r\nimport React, {Component} from 'react'\r\nimport BookShelf from './BookShelf'\r\nimport AddBookUI from '../AddBookUI/AddBookUI'\r\nimport './bookStyles.css'\r\nimport SortBooks from '../sortItems/SortBooks'\r\nimport Hotkeys from 'react-hot-keys';\r\nimport {deleteBook, deLinkBookfromWindow, storeBook, updateBookLW} from \"../firebase/firestore/db_functions\";\r\n//added hotkeys: https://github.com/jaywcjlove/react-hotkeys#readme\r\n\r\nclass BookAppMain extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbookshelf: [],\r\n\t\t\taddingBook: false,\r\n\t\t\tlinkedBook: \"\", //the current book that is linked to the window\r\n\t\t\turlsForLaunch:[],\r\n\t\t\turlsForWormhole:[]\r\n\t\t};\r\n\r\n\t\t// //TODO move the chrome runtime stuff and their callback fns to somewhere more suitable\r\n\t\t// chrome.runtime.sendMessage({rq: \"urlsForLaunch\"}, this._cbForLaunchResponse);\r\n\t\t// chrome.runtime.sendMessage({rq: \"urlsForWormhole\"}, this._cbForWormholeResponse);\r\n\t\t// this.handleMessage.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount = () => {//updating the user's personal books\r\n\t\tthis.setState({bookshelf: this.props.books})\r\n\t\t// chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\r\n\t}\r\n\r\n\thandleMessage(message, sender, sendResponse){\r\n\t\tif(message.urlsForLaunch != null){\r\n\t\t\tconsole.log(\"App.js got launch urls from background\")\r\n\r\n\t\t\tconst filteredBook = this.state.bookshelf.map(book => {//find the linked book and then update the Launch for the book\r\n\t\t\t\tif( book.linkedWindowId === message.winId){\r\n\t\t\t\t\tbook.Launch = message.urlsForLaunch;\r\n\t\t\t\t\tupdateBookLW(book, this.props.user.uid).then(() => console.log(\"launch in db successfully updated\"));\r\n\t\t\t\t}\r\n\t\t\t\treturn book;\r\n\t\t\t})\r\n\r\n\t\t\tconsole.log(\"updating books after launch: \")\r\n\t\t\tconsole.log(filteredBook)\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tbookshelf: filteredBook,\r\n\t\t\t\turlsForLaunch: message.urlsForLaunch\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t\tif(message.urlsForWormhole != null){\r\n\t\t\tconsole.log(\"App.js got launch wormhole from background\")\r\n\r\n\t\t\tconst filteredBook = this.state.bookshelf.map(book => {//find the linked book and then update the WormHole for the book\r\n\t\t\t\tif( book.linkedWindowId === message.winId){\r\n\t\t\t\t\tbook.WormHole = message.urlsForWormhole;\r\n\t\t\t\t\tupdateBookLW(book, this.props.user.uid).then(() => console.log(\"wormhole in db successfully updated\"));\r\n\t\t\t\t}\r\n\t\t\t\treturn book;\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"updating books after Wormhole: \")\r\n\t\t\tconsole.log(filteredBook)\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tbookshelf: filteredBook,\r\n\t\t\t\turlsForWormhole: message.urlsForWormhole\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t\tconsole.log(this.state.bookshelf);\r\n\t}\r\n\r\n\r\n\t_cbForLaunchResponse = (response) => {\r\n\t\tthis.setState({\r\n\t\t\turlsForLaunch: response.urlsForLaunch\r\n\t\t})\r\n\r\n\t\tconsole.log(\"state of book after LAUNCH update from background:\")\r\n\r\n\t}\r\n\r\n\t_cbForWormholeResponse = (response) => {\r\n\t\tthis.setState({\r\n\t\t\turlsForWormhole: response.urlsForWormhole\r\n\t\t})\r\n\r\n\t\tconsole.log(\"state of book after WORMHOLE update from background:\")\r\n\t\tconsole.log(this.state.bookshelf);\r\n\r\n\t}\r\n\r\n\t/*Methods for adding and deleting books*/\r\n\ttoggleAddBook = () =>{\r\n\t\t//console.log(\"Adding book\");\r\n\t\tthis.setState({addingBook:!this.state.addingBook});\r\n\t}\r\n\t//updates teh linkedWindow, launch and wormhole of a book in database\r\n\tupdateBook = (bookToBeUpdated, linkedWindowId, launch, wormhole) =>{\r\n\t\t\r\n\t\tlet updatedBooks = this.state.bookshelf.map(function(book, putInDataBase) {//find the linked book and then update the WormHole for the book\r\n\t\t\tif( book.key == bookToBeUpdated.key){\r\n\t\t\t\tbook.linkedWindowId = linkedWindowId;\r\n\t\t\t\tbook.WormHole = wormhole;\r\n\t\t\t\tbook.Launch = launch;\r\n\t\t\t}\r\n\t\t\treturn book;\r\n\t\t});\r\n\t\tbookToBeUpdated.linkedWindowId = linkedWindowId;\r\n\t\tbookToBeUpdated.WormHole = wormhole;\r\n\t\tbookToBeUpdated.Launch = launch;\r\n\r\n\r\n\t\tupdateBookLW(bookToBeUpdated, this.props.user.uid).then(e => {\r\n\t\t\tconsole.log(\"finished putting \"+bookToBeUpdated.title+\" in database with window\"+bookToBeUpdated.linkedWindowId);\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tbookshelf:updatedBooks\r\n\t\t})\r\n\r\n\t}\r\n\r\n\taddBook = (newBook)=> {//gets the newBook from addBookUI /*Every book has title and key, which is the date and linkedwindowId*/\r\n\t\t// deLinking books that may have already linked with this window\r\n\r\n\t\tconst currWindowId = newBook.linkedWindowId;\r\n\r\n\t\tconst filteredBooks = this.state.bookshelf.map((book, index, array) => {\r\n\t\t\tdeLinkBookfromWindow(book, currWindowId, this.props.user.uid)\r\n\t\t\t\t.then(() => {//delinks the book from window in the database\r\n\t\t\t\t\t// book.Launch = null;\r\n\t\t\t\t\t// book.WormHole = null;\r\n\t\t\t\t\t// book.linkedWindowId = -1001;\r\n\t\t\t\t});\r\n\r\n\t\t\treturn book;\r\n\t\t});\r\n\r\n\t\t//storing the newBook that is linked to the current window\r\n\t\tstoreBook(newBook, this.props.user.uid).then(e => {\r\n\t\t\tthis.setState(prevState => ({\r\n\t\t\t\tlinkedBook: newBook.key,\r\n\t\t\t\tbookshelf: [...filteredBooks, newBook],\r\n\t\t\t\taddingBook: false//this clears the addBookUI\r\n\t\t\t}));\r\n\t\t\tconsole.log(\"Adding book success!\")\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteBook = (book) => {\r\n\t\tdeleteBook(book, this.props.user.uid).then(() => {\r\n\t\t    const filteredBooks = this.state.bookshelf.filter((bk) => {\r\n\t\t\t\t    return (bk.title !== book.title);\r\n\t\t    });\r\n\t\t    this.setState({ //This will update the state and trigger a rerender of the components\r\n\t\t\t    bookshelf: filteredBooks\r\n\t\t    });\r\n\t\t});\r\n\t}\r\n\r\n\tsetBooks = (books) => {\r\n\t\tthis.setState({\r\n\t\t  bookshelf: books\r\n\t\t});\r\n\t}\r\n\r\n\tdebugBkShelf = () => {\r\n\t\tconsole.log(\"BookAppMain State is now \"+this.state.bookshelf);\r\n\t\tthis.state.bookshelf.map((_book, _key) => {\r\n\t        return(\r\n\t          console.log(\"Book (\"+_book.title+\",\"+_book.key+\")\")\r\n\t        );\r\n\t\t})\r\n\t}\r\n\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/*Hotkey for dev only, when lots of experimental books are added. take away from final product.*/}\r\n\t\t\t\t<Hotkeys keyName = \"shift+a\" onKeyUp = {this.toggleAddBook}/>\r\n\t\t\t\t{/*<button onClick = {this.getURLS}>Get Open Windows</button>*/}\r\n\t\t\t\t<div className = 'main-container-center'>\r\n\r\n\t\t\t\t\t{/*{console.log(\"books are: \")};*/}\r\n\t\t\t\t\t{/*{console.log(this.state.bookshelf)};*/}\r\n\r\n\t\t\t\t\t<div id = 'blurrable' className = 'book-shelf'>\r\n\t\t\t\t\t\t<SortBooks books = {this.state.bookshelf} setBooks = {this.setBooks} isBlurred = {this.state.addingBook}/>\r\n\t\t\t\t\t\t<div className = {this.state.addingBook?'blur-bg':'clear-bg'}>\r\n\t\t\t\t\t\t\t<BookShelf bks = {this.state.bookshelf} updateBook = {this.updateBook} deleteBook = {this.deleteBook}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{this.state.addingBook?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<AddBookUI\r\n\t\t\t\t\t\t\t\taddBook = {this.addBook}\r\n\t\t\t\t\t\t\t\tclosePopup={this.toggleAddBook}\r\n\t\t\t\t\t\t\t\tbks = {this.state.bookshelf}\r\n\t\t\t\t\t\t\t\turlsForLaunch={this.state.urlsForLaunch}\r\n\t\t\t\t\t\t\t\turlsForWormhole={this.state.urlsForWormhole}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div/>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<button className = 'add-bk-btn' onClick={this.toggleAddBook}><h2>+</h2></button>\r\n\r\n\t\t\t\t\t{/*<h2>URLs for Wormhole</h2>*/}\r\n\t\t\t\t\t{/*<ul>*/}\r\n\t\t\t\t\t{/*\t{ this.state.urlsForWormhole.map(title => <li>{title}</li>)}*/}\r\n\t\t\t\t\t{/*</ul>*/}\r\n\r\n\t\t\t\t\t{/*<h2>URLs for Launch</h2>*/}\r\n\t\t\t\t\t{/*<ul>*/}\r\n\t\t\t\t\t{/*\t{ this.state.urlsForLaunch.map(title => <li>{title}</li>)}*/}\r\n\t\t\t\t\t{/*</ul>*/}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\nexport default (BookAppMain);","import React, { useState } from \"react\";\r\nimport { bw_auth, signInWithGoogle, generateUserDocument } from \"../firebase/init.js\";\r\nimport SignIn from \"./SignIn\";\r\nimport {Link} from \"react-chrome-extension-router\";\r\n\r\nconst SignUp = () => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst createUserWithEmailAndPasswordHandler = async (event, email, password) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst result = await bw_auth.createUserWithEmailAndPassword(email, password)\r\n\t\t\t.then(async userCredential => {\r\n\t\t\t\tawait generateUserDocument(userCredential.user);\r\n\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tsetError('Error Signing up with email and password');\r\n\t\t\t\tsetTimeout(() => {setError(null)}, 3000);\r\n\t\t\t\treturn error\r\n\t\t\t});\r\n\r\n\t\tsetEmail(\"\");\r\n\t\tsetPassword(\"\");\r\n\t\treturn result\r\n\t};\r\n\r\n\tconst onChangeHandler = event => {\r\n\t\tconst { name, value } = event.currentTarget;\r\n\r\n\t\tif (name === \"userEmail\") {\r\n\t\t\tsetEmail(value);\r\n\t\t} else if (name === \"userPassword\") {\r\n\t\t\tsetPassword(value);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"mt-8\">\r\n\t\t\t<h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\r\n\t\t\t<div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n\t\t\t\t{error !== null && (\r\n\t\t\t\t\t<div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\r\n\t\t\t\t\t\t{error}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<form className=\"\">\r\n\t\t\t\t\t<label htmlFor=\"userEmail\" className=\"block\">\r\n\t\t\t\t\t\tEmail:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"my-1 p-1 w-full\"\r\n\t\t\t\t\t\tname=\"userEmail\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tplaceholder=\"E.g: faruq123@gmail.com\"\r\n\t\t\t\t\t\tid=\"userEmail\"\r\n\t\t\t\t\t\tonChange={event => onChangeHandler(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"userPassword\" className=\"block\">\r\n\t\t\t\t\t\tPassword:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"mt-1 mb-3 p-1 w-full\"\r\n\t\t\t\t\t\tname=\"userPassword\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tplaceholder=\"Your Password\"\r\n\t\t\t\t\t\tid=\"userPassword\"\r\n\t\t\t\t\t\tonChange={event => onChangeHandler(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\r\n\t\t\t\t\t\tonClick={event => {\r\n\t\t\t\t\t\t\tsetError(null)\r\n\t\t\t\t\t\t\tcreateUserWithEmailAndPasswordHandler(event, email, password)\r\n\t\t\t\t\t\t\t\t.catch(e => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign up\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<p className=\"text-center my-3\">or</p>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tsignInWithGoogle();\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.error(\"Error signing in with Google\", error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSign In with Google\r\n\t\t\t\t</button>\r\n\t\t\t\t<p className=\"text-center my-3\">\r\n\t\t\t\t\tAlready have an account?{\" \"}\r\n\t\t\t\t\t<Link component={SignIn} className=\"text-blue-500 hover:text-blue-600\">\r\n\t\t\t\t\t\tSign in here\r\n\t\t\t\t\t</Link>{\" \"}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignUp;","import React, {Component} from \"react\";\r\nimport {bw_auth} from \"../firebase/init.js\";\r\nimport SignIn from \"./SignIn\";\r\nimport {Link} from \"react-chrome-extension-router\";\r\n\r\nclass PasswordReset extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: \"\",\r\n\t\t\temailHasBeenSent: false,\r\n\t\t\terror: null\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"mt-8\">\r\n\t\t\t\t<h1 className=\"text-xl text-center font-bold mb-3\">\r\n\t\t\t\t\tReset your Password\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n\t\t\t\t\t<form action=\"\">\r\n\t\t\t\t\t\t{this.state.emailHasBeenSent && (\r\n\t\t\t\t\t\t\t<div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n\t\t\t\t\t\t\t\tAn email has been sent to you!\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{this.state.error !== null && (\r\n\t\t\t\t\t\t\t<div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n\t\t\t\t\t\t\t\t{this.state.error}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<label htmlFor=\"userEmail\" className=\"w-full block\">\r\n\t\t\t\t\t\t\tEmail:\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"userEmail\"\r\n\t\t\t\t\t\t\tid=\"userEmail\"\r\n\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t\tplaceholder=\"Input your email\"\r\n\t\t\t\t\t\t\tonChange={this.onChangeHandler}\r\n\t\t\t\t\t\t\tclassName=\"mb-3 w-full px-1 py-2\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"w-full bg-blue-400 text-white py-3\"\r\n\t\t\t\t\t\t\tonClick={event => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\terror: null\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tthis.sendResetEmail(event);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSend me a reset link\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tcomponent={SignIn}\r\n\t\t\t\t\t\tclassName=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&larr; back to sign in page\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tonChangeHandler = event => {\r\n\t\tconst { name, value } = event.currentTarget;\r\n\r\n\t\tif (name === \"userEmail\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\temail: value\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tsendResetEmail = event => {\r\n\t\tevent.preventDefault();\r\n\t\tbw_auth.sendPasswordResetEmail(this.state.email)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\temailHasBeenSent: true\r\n\t\t\t\t});\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\temailHasBeenSent: false\r\n\t\t\t})}, 3000);\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror: \"Error resetting password\"\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n}\r\n\r\n// const PasswordReset = () => {\r\n// \tconst [email, setEmail] = useState(\"\");\r\n// \tconst [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n// \tconst [error, setError] = useState(null);\r\n//\r\n// \tconst onChangeHandler = event => {\r\n// \t\tconst { name, value } = event.currentTarget;\r\n//\r\n// \t\tif (name === \"userEmail\") {\r\n// \t\t\tsetEmail(value);\r\n// \t\t}\r\n// \t};\r\n//\r\n// \tconst sendResetEmail = event => {\r\n// \t\tevent.preventDefault();\r\n// \t\tbw_auth.sendPasswordResetEmail(email)\r\n// \t\t\t.then(() => {\r\n// \t\t\t\tsetEmailHasBeenSent(true);\r\n// \t\t\t\tsetTimeout(() => {setEmailHasBeenSent(false)}, 3000);\r\n// \t\t\t})\r\n// \t\t\t.catch(() => {\r\n// \t\t\t\tsetError(\"Error resetting password\");\r\n// \t\t\t});\r\n// \t};\r\n// \treturn (\r\n// \t\t<div className=\"mt-8\">\r\n// \t\t\t<h1 className=\"text-xl text-center font-bold mb-3\">\r\n// \t\t\t\tReset your Password\r\n// \t\t\t</h1>\r\n// \t\t\t<div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n// \t\t\t\t<form action=\"\">\r\n// \t\t\t\t\t{emailHasBeenSent && (\r\n// \t\t\t\t\t\t<div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n// \t\t\t\t\t\t\tAn email has been sent to you!\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t)}\r\n// \t\t\t\t\t{error !== null && (\r\n// \t\t\t\t\t\t<div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n// \t\t\t\t\t\t\t{error}\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t)}\r\n// \t\t\t\t\t<label htmlFor=\"userEmail\" className=\"w-full block\">\r\n// \t\t\t\t\t\tEmail:\r\n// \t\t\t\t\t</label>\r\n// \t\t\t\t\t<input\r\n// \t\t\t\t\t\ttype=\"email\"\r\n// \t\t\t\t\t\tname=\"userEmail\"\r\n// \t\t\t\t\t\tid=\"userEmail\"\r\n// \t\t\t\t\t\tvalue={email}\r\n// \t\t\t\t\t\tplaceholder=\"Input your email\"\r\n// \t\t\t\t\t\tonChange={onChangeHandler}\r\n// \t\t\t\t\t\tclassName=\"mb-3 w-full px-1 py-2\"\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t\t<button\r\n// \t\t\t\t\t\tclassName=\"w-full bg-blue-400 text-white py-3\"\r\n// \t\t\t\t\t\tonClick={event => {\r\n// \t\t\t\t\t\t\tsetError(null);\r\n// \t\t\t\t\t\t\tsendResetEmail(event);\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\tSend me a reset link\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t</form>\r\n//\r\n// \t\t\t\t<Link\r\n// \t\t\t\t\tcomponent={SignIn}\r\n// \t\t\t\t\tclassName=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\r\n// \t\t\t\t>\r\n// \t\t\t\t\t&larr; back to sign in page\r\n// \t\t\t\t</Link>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\nexport default PasswordReset;","import React, {useState} from \"react\";\r\nimport {bw_auth, signInWithGoogle} from \"../firebase/init\";\r\nimport {Link} from \"react-chrome-extension-router\";\r\nimport SignUp from \"./SignUp\";\r\nimport PasswordReset from \"./PasswordReset\";\r\n\r\nconst SignIn = () => {\r\n\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst signInWithEmailAndPasswordHandler = (event,email, password) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tbw_auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n\t\t\tsetError(\"Error signing in with password and email!\");\r\n\t\t\tconsole.error(\"Error signing in with password and email\", error);\r\n\t\t})\r\n\t};\r\n\r\n\tconst onChangeHandler = (event) => {\r\n\t\tconst {name, value} = event.currentTarget;\r\n\r\n\t\tif(name === 'userEmail') {\r\n\t\t\tsetEmail(value);\r\n\t\t}\r\n\t\telse if(name === 'userPassword'){\r\n\t\t\tsetPassword(value);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"mt-8\">\r\n\t\t\t<h1 className=\"text-3xl mb-2 text-center font-bold\">Sign In</h1>\r\n\t\t\t<div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n\t\t\t\t{error !== null && <div className = \"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\r\n\t\t\t\t<form className=\"\">\r\n\t\t\t\t\t<label htmlFor=\"userEmail\" className=\"block\">\r\n\t\t\t\t\t\tEmail:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"my-1 p-1 w-full\"\r\n\t\t\t\t\t\tname=\"userEmail\"\r\n\t\t\t\t\t\tvalue = {email}\r\n\t\t\t\t\t\tplaceholder=\"E.g: faruq123@gmail.com\"\r\n\t\t\t\t\t\tid=\"userEmail\"\r\n\t\t\t\t\t\tonChange = {(event) => onChangeHandler(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"userPassword\" className=\"block\">\r\n\t\t\t\t\t\tPassword:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"mt-1 mb-3 p-1 w-full\"\r\n\t\t\t\t\t\tname=\"userPassword\"\r\n\t\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\t\tplaceholder=\"Your Password\"\r\n\t\t\t\t\t\tid=\"userPassword\"\r\n\t\t\t\t\t\tonChange = {(event) => onChangeHandler(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}}>\r\n\t\t\t\t\t\tSign in\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<p className=\"text-center my-3\">or</p>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsignInWithGoogle();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tSign in with Google\r\n\t\t\t\t</button>\r\n\t\t\t\t<p className=\"text-center my-3\">\r\n\t\t\t\t\tDon't have an account?{\" \"}\r\n\t\t\t\t\t<Link component={SignUp} className=\"text-blue-500 hover:text-blue-600\" >\r\n\t\t\t\t\t\tSign up here\r\n\t\t\t\t\t</Link>{\" \"}\r\n\t\t\t\t\t<br />{\" \"}\r\n\t\t\t\t\t<Link component={PasswordReset} className=\"text-blue-500 hover:text-blue-600\">\r\n\t\t\t\t\t\tForgot Password?\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { Component } from \"react\";\r\nimport { bw_auth, generateUserDocument } from \"../firebase/init.js\";\r\nimport BookAppMain from \"../books/BookAppMain\";\r\nimport {Router} from \"react-chrome-extension-router\";\r\nimport SignIn from \"./SignIn\";\r\nimport { populatePortfolioHomepage} from \"../firebase/firestore/db_functions\";\r\n\r\nclass User extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser: null,\r\n\t\t\tbooks: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = async () => {\r\n\t\tawait bw_auth.onAuthStateChanged(async user => {\r\n\t\t\tif(user) {//if it exists, grab user bookData from the database into app\r\n\t\t\t\t// console.log(userAuth.providerData)\r\n\t\t\t\t// console.log(userAuth.providerId)\r\n\r\n\t\t\t\t//TEST FUNCTIONS FOR UPDATING THE DATABASE\r\n\t\t\t\t// await storeBook({\r\n\t\t\t\t// \tkey: Date.now(),\r\n\t\t\t\t// \ttitle: \"applesss\",\r\n\t\t\t\t// \ttime_created: Date.now()\r\n\t\t\t\t// \t}, user.uid)\r\n\r\n\t\t\t\tawait populatePortfolioHomepage(user.uid)\r\n\t\t\t\t\t.then(async books => {\r\n\t\t\t\t\t\tconsole.log(books)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tuser: await generateUserDocument(user),\r\n\t\t\t\t\t\t\tbooks: [...books]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}, e => console.log(e))\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\tthis.state.user ?\r\n\t\t\t\t<div className=\"users_portfolio_homepage\">\r\n\t\t\t\t\t<h1 className={\"ph_title\"}>BookWorm</h1>\r\n\t\t\t\t\t<BookAppMain user={this.state.user} books={this.state.books}/>\r\n\t\t\t\t\t<button className = \"w-full py-3 bg-red-600 mt-4 text-white\"\r\n\t\t\t\t\t        onClick = {() => {\r\n\t\t\t\t\t\t        bw_auth.signOut().then(() => {\r\n\t\t\t\t\t\t\t\t        console.log(\"Logged out successful\")\r\n\t\t\t\t\t\t\t\t        this.setState({\r\n\t\t\t\t\t\t\t\t\t        user: null\r\n\t\t\t\t\t\t\t\t        })\r\n\t\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t\t        onRejected => {\r\n\t\t\t\t\t\t\t\t        console.log(\"log out unsuccessful\")\r\n\t\t\t\t\t\t\t\t        console.log(onRejected)\r\n\t\t\t\t\t\t\t        }\r\n\t\t\t\t\t\t        )\r\n\t\t\t\t\t        }\r\n\t\t\t\t\t        }>Sign out</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<SignIn />\r\n\t\t\t\t</Router>\r\n\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport { SketchPicker } from 'react-color'\r\n\r\nclass BackgroundColor extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t    background: '#fff176',\r\n\t\t    showColorPicker : false\r\n\t\t  };\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tdocument.body.style.backgroundColor = '#fff176';\r\n\t}\r\n\t\r\n\r\n\t handleChangeComplete = (color) => {\r\n    \tthis.setState({ background: color.hex });\r\n    \tdocument.body.style.backgroundColor = color.hex;\r\n  \t};\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<button onClick = {this.toggleColor}>Change Background Color</button>\r\n\t\t\t{this.state.showColorPicker?\r\n\t\t      <SketchPicker\r\n\t\t        color={ this.state.background }\r\n\t\t        onChangeComplete={ this.handleChangeComplete }\r\n\t\t      />:\r\n\t\t      <div></div>\r\n\t\t  \t}\r\n\t      </div>\r\n\t    );\r\n\t}\r\n\r\n\ttoggleColor = () =>{\r\n\t\tthis.setState({\r\n\t\t\tshowColorPicker: !this.state.showColorPicker\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default BackgroundColor;"," /*global chrome*/\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport User from \"./Authentication/User\";\r\nimport BgColor from \"./ColorCustomizer/BackgroundColor\"\r\n//TODO currently clumsy way of dealing with the chrome extension connection error in the local host main page.\r\n\r\nclass App extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlinkedBook: \"\", //the current book that is linked to the window\r\n\t\t\turlsForLaunch:[],\r\n\t\t\turlsForWormhole:[]\r\n\t\t};\r\n\r\n\t\t// //TODO move the chrome runtime stuff and their callback fns to somewhere more suitable\r\n\t\t// chrome.runtime.sendMessage({rq: \"urlsForLaunch\"}, this._cbForLaunchResponse);\r\n\t\t// chrome.runtime.sendMessage({rq: \"urlsForWormhole\"}, this._cbForWormholeResponse);\r\n\t\tthis.handleMessage.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\r\n\t\t// chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\r\n\t}\r\n\t\r\n\thandleMessage(message, sender, sendResponse){\r\n\t\tif(message.urlsForLaunch != null){\r\n\t\r\n\t\t\tthis.setState({urlsForLaunch: message.urlsForLaunch})\r\n\t\t}\r\n\t\tif(message.urlsForWormhole != null){\r\n\t\t\tthis.setState({urlsForWormhole: message.urlsForWormhole})\r\n\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t_cbForLaunchResponse = (response) => {\r\n\t\r\n\t\tthis.setState({urlsForLaunch: response.urlsForLaunch})\r\n\t\r\n\t}\r\n\t\r\n\t_cbForWormholeResponse = (response) => {\r\n\t\r\n\t\tthis.setState({urlsForWormhole: response.urlsForWormhole})\r\n\t\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\treturn <div className=\"App\">\r\n\t\t\t\t<User/>\r\n\t\t\t<h2>URLs for Wormhole</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t{ this.state.urlsForWormhole.map(title => <li>{title}</li>)}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<h2>URLs for Launch</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t{ this.state.urlsForLaunch.map(title => <li>{title}</li>)}\r\n\t\t\t</ul>\r\n\t\t\t<BgColor />\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\nimport \"./styles.css\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));// renders a React element into a root DOM node\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}